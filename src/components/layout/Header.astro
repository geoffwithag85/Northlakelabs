---
// Use consistent relative paths for custom domain setup
const logoSrc = "/assets/northlake_logo_transparent.png";
---

<header class="relative z-10 py-8">
  <div class="max-w-6xl mx-auto px-6">
    <nav class="flex items-center justify-between">
      <div class="flex items-center gap-4">        <div class="filter drop-shadow-lg">
          <img 
            src={logoSrc}
            alt="Northlake Labs Logo" 
            width="60" 
            height="60"
            class="rounded-lg transition-transform duration-300 hover:scale-105"
          />
        </div>
        <h1 class="text-2xl font-semibold bg-gradient-to-r from-burnt-sienna via-royal-purple to-indigo bg-clip-text text-transparent">
          Northlake Labs
        </h1>
      </div>      <!-- Desktop navigation -->
      <nav class="hidden md:flex items-center gap-8">
        <a href="/" class="text-gray-300 hover:text-burnt-sienna transition-colors duration-300">Home</a>
        <a href="/about/" class="text-gray-300 hover:text-burnt-sienna transition-colors duration-300">About</a>
        <a href="/solutions/" class="text-gray-300 hover:text-burnt-sienna transition-colors duration-300">Solutions</a>
        <a href="/contact/" class="text-gray-300 hover:text-burnt-sienna transition-colors duration-300">Contact</a>
      </nav>
        <!-- Mobile menu button -->
      <button 
        id="mobile-menu-button"
        class="md:hidden text-gray-300 hover:text-burnt-sienna transition-colors duration-300 z-50 relative"
        aria-expanded="false"
        aria-controls="mobile-menu"
        aria-label="Toggle navigation menu"
      >
        <!-- Hamburger icon -->
        <svg id="hamburger-icon" class="w-6 h-6 transition-opacity duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
        <!-- Close icon -->
        <svg id="close-icon" class="w-6 h-6 absolute top-0 left-0 opacity-0 transition-opacity duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>
    </nav>    <!-- Mobile navigation menu -->
    <nav 
      id="mobile-menu"
      class="md:hidden fixed inset-x-0 top-0 bg-black-pearl/95 backdrop-blur-lg transform -translate-y-full transition-transform duration-300 ease-in-out z-50 border-b border-gray-700/50 shadow-2xl"
      aria-hidden="true"
    >      <div class="px-6 pt-24 pb-8">
        <div class="flex flex-col space-y-6">
          <a 
            href="/" 
            class="text-xl text-white hover:text-burnt-sienna transition-colors duration-300 py-2 border-b border-gray-700/50 font-medium"
          >
            Home
          </a>
          <a 
            href="/about/" 
            class="text-xl text-white hover:text-burnt-sienna transition-colors duration-300 py-2 border-b border-gray-700/50 font-medium"
          >
            About
          </a>
          <a 
            href="/solutions/" 
            class="text-xl text-white hover:text-burnt-sienna transition-colors duration-300 py-2 border-b border-gray-700/50 font-medium"
          >
            Solutions
          </a>
          <a 
            href="/contact/" 
            class="text-xl text-white hover:text-burnt-sienna transition-colors duration-300 py-2 font-medium"
          >
            Contact
          </a></div>
      </div>
    </nav>
  </div>
</header>

<script>
  // Mobile menu functionality
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');
  const hamburgerIcon = document.getElementById('hamburger-icon');
  const closeIcon = document.getElementById('close-icon');
  
  let isMenuOpen = false;

  function toggleMobileMenu() {
    isMenuOpen = !isMenuOpen;
    
    if (isMenuOpen) {
      // Open menu
      mobileMenu?.classList.remove('-translate-y-full');
      mobileMenu?.classList.add('translate-y-0');
      mobileMenu?.setAttribute('aria-hidden', 'false');
      mobileMenuButton?.setAttribute('aria-expanded', 'true');
      
      // Switch icons
      hamburgerIcon?.classList.remove('opacity-100');
      hamburgerIcon?.classList.add('opacity-0');
      closeIcon?.classList.remove('opacity-0');
      closeIcon?.classList.add('opacity-100');
      
      // Prevent body scroll
      document.body.style.overflow = 'hidden';
    } else {
      // Close menu
      mobileMenu?.classList.remove('translate-y-0');
      mobileMenu?.classList.add('-translate-y-full');
      mobileMenu?.setAttribute('aria-hidden', 'true');
      mobileMenuButton?.setAttribute('aria-expanded', 'false');
      
      // Switch icons
      hamburgerIcon?.classList.remove('opacity-0');
      hamburgerIcon?.classList.add('opacity-100');
      closeIcon?.classList.remove('opacity-100');
      closeIcon?.classList.add('opacity-0');
      
      // Restore body scroll
      document.body.style.overflow = '';
    }
  }

  // Toggle menu on button click
  mobileMenuButton?.addEventListener('click', toggleMobileMenu);
  
  // Close menu when clicking on a link
  const mobileMenuLinks = mobileMenu?.querySelectorAll('a');
  mobileMenuLinks?.forEach(link => {
    link.addEventListener('click', () => {
      if (isMenuOpen) {
        toggleMobileMenu();
      }
    });
  });
  
  // Close menu on escape key
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && isMenuOpen) {
      toggleMobileMenu();
    }
  });
  
  // Close menu on window resize to desktop size
  window.addEventListener('resize', () => {
    if (window.innerWidth >= 768 && isMenuOpen) {
      toggleMobileMenu();
    }
  });
</script>
